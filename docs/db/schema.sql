-- Создание таблицы "поставщиков"
CREATE TABLE suppliers (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    contact_info TEXT,
    created TIMESTAMPTZ DEFAULT NOW()
);

-- Создание таблицы "продуктов" с FK для "поставщиков"
CREATE TABLE products (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sku VARCHAR(100) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    supplier_id INT NOT NULL,
    weight_kg DECIMAL(10,3) CHECK (weight_kg >= 0),
    created TIMESTAMPTZ DEFAULT NOW(),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(id)
);

-- Создание таблицы "складов"
CREATE TABLE warehouses (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    location TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Создание таблицы "продаж" с FK для "продуктов"
CREATE TABLE sales (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id_s INT NOT NULL,
    sale_date TIMESTAMPTZ NOT NULL,
    quantity INT NOT NULL CHECK (quantity > 0),
    price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
    total_amount DECIMAL(12,2) GENERATED ALWAYS AS (quantity * price) STORED,
    FOREIGN KEY (product_id_s) REFERENCES products(id)
);

-- Создание промежуточной таблицы для связи многие-ко-многим между products и warehouses
CREATE TABLE product_inventory (
    product_id_pi INT NOT NULL,
    warehouse_id INT NOT NULL,
    quantity INT NOT NULL CHECK (quantity >= 0),
    last_updated TIMESTAMPTZ DEFAULT NOW(),
    PRIMARY KEY (product_id_pi, warehouse_id), -- Composite Primary Key
    FOREIGN KEY (product_id_pi) REFERENCES products(id),
    FOREIGN KEY (warehouse_id) REFERENCES warehouses(id)
);